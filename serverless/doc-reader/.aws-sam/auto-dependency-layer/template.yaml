AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Deploys the necessary infrastructure for the doc-reader container, enabling
  it to be run as a Fargate task orchestrated by Step Functions.

  '
Parameters:
  ProjectName:
    Type: String
    Default: doc-reader
Resources:
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${ProjectName}-TaskRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${ProjectName}-S3AccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:ListBucket
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${InputBucket}
              - InputBucket:
                  Fn::ImportValue: finance-doc-core-infra-input-bucket
          - Effect: Allow
            Action:
            - s3:GetObject
            - s3:PutObject
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${InputBucket}/*
              - InputBucket:
                  Fn::ImportValue: finance-doc-core-infra-input-bucket
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName:
        Ref: ProjectName
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${ProjectName}-TaskExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /ecs/${ProjectName}
      RetentionInDays: 30
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family:
        Ref: ProjectName
      RequiresCompatibilities:
      - FARGATE
      NetworkMode: awsvpc
      Cpu: '4096'
      Memory: '16384'
      RuntimePlatform:
        CpuArchitecture: ARM64
      ExecutionRoleArn:
        Fn::GetAtt:
        - TaskExecutionRole
        - Arn
      TaskRoleArn:
        Fn::GetAtt:
        - TaskRole
        - Arn
      ContainerDefinitions:
      - Name:
          Ref: ProjectName
        Image:
          Fn::Sub: ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ProjectName}:latest
        LogConfiguration:
          LogDriver: awslogs
          Options:
            awslogs-group:
              Ref: LogGroup
            awslogs-region:
              Ref: AWS::Region
            awslogs-stream-prefix: ecs
        Environment: []
  DocReaderEventBus:
    Type: AWS::Events::EventBus
    Properties:
      Name: doc-reader
      Description: Custom event bus for doc-reader service events
      Tags:
      - Key: Service
        Value: doc-reader
      - Key: Purpose
        Value: event-driven-processing
  DocumentProcessingDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: ${ProjectName}-document-processing-dlq
  EventBridgeEcsTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${ProjectName}-EventBridgeEcsTaskRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: RunEcsTaskPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - ecs:RunTask
            Resource:
              Ref: TaskDefinition
          - Effect: Allow
            Action:
            - iam:PassRole
            Resource:
            - Fn::GetAtt:
              - TaskRole
              - Arn
            - Fn::GetAtt:
              - TaskExecutionRole
              - Arn
          - Effect: Allow
            Action:
            - sqs:SendMessage
            Resource:
              Fn::GetAtt:
              - DocumentProcessingDLQ
              - Arn
  DocumentUploadEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name:
        Fn::Sub: ${ProjectName}-DocumentUploadRule
      Description: Trigger doc-reader ECS task when PDFs are uploaded to input bucket
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - Object Created
        detail:
          bucket:
            name:
            - Fn::ImportValue: finance-doc-core-infra-input-bucket
          object:
            key:
            - prefix: userId/documents/
            - suffix: .pdf
      State: ENABLED
      Targets:
      - Id: DocReaderEcsTaskTarget
        Arn:
          Fn::Sub:
          - arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${ClusterName}
          - ClusterName:
              Fn::ImportValue: finance-doc-core-infra-ecs-cluster
        RoleArn:
          Fn::GetAtt:
          - EventBridgeEcsTaskRole
          - Arn
        DeadLetterConfig:
          Arn:
            Fn::GetAtt:
            - DocumentProcessingDLQ
            - Arn
        EcsParameters:
          TaskDefinitionArn:
            Ref: TaskDefinition
          LaunchType: FARGATE
          NetworkConfiguration:
            AwsVpcConfiguration:
              AssignPublicIp: ENABLED
              Subnets:
              - subnet-0e6226143b6413cbe
          TaskCount: 1
        InputTransformer:
          InputPathsMap:
            bucket: $.detail.bucket.name
            s3Key: $.detail.object.key
          InputTemplate:
            Fn::Sub: "{\n  \"containerOverrides\": [\n    {\n      \"name\": \"${ProjectName}\"\
              ,\n      \"environment\": [\n        {\n          \"name\": \"INPUT_S3_BUCKET\"\
              ,\n          \"value\": \"<bucket>/<s3Key>\"\n        },\n        {\n\
              \          \"name\": \"OUTPUT_S3_URI_PREFIX\",\n          \"value\"\
              : \"<bucket>/<s3Key>\"\n        }\n      ]\n    }\n  ]\n}\n"
Outputs:
  EcrRepositoryUri:
    Description: The URI of the ECR repository for the doc-reader image
    Value:
      Fn::GetAtt:
      - EcrRepository
      - RepositoryUri
  TaskDefinitionArn:
    Description: The ARN of the ECS Task Definition
    Value:
      Ref: TaskDefinition
  DocReaderEventBusName:
    Description: The name of the custom event bus for doc-reader events
    Value:
      Ref: DocReaderEventBus
    Export:
      Name: doc-reader-event-bus-name
  DocReaderEventBusArn:
    Description: The ARN of the custom event bus for doc-reader events
    Value:
      Fn::GetAtt:
      - DocReaderEventBus
      - Arn
    Export:
      Name: doc-reader-event-bus-arn
  DocumentProcessingDLQUrl:
    Description: URL of the Dead Letter Queue for failed document processing events
    Value:
      Ref: DocumentProcessingDLQ
    Export:
      Name:
        Fn::Sub: ${ProjectName}-dlq-url
  DocumentProcessingDLQArn:
    Description: ARN of the Dead Letter Queue for failed document processing events
    Value:
      Fn::GetAtt:
      - DocumentProcessingDLQ
      - Arn
    Export:
      Name:
        Fn::Sub: ${ProjectName}-dlq-arn
