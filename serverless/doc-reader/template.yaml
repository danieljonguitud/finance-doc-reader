AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Deploys the necessary infrastructure for the doc-reader container,
  enabling it to be run as a Fargate task orchestrated by Step Functions.

Parameters:
  ProjectName:
    Type: String
    Default: doc-reader
    Description: A name for the project, used to prefix resource names.

Resources:
  # --- S3 Buckets for Input and Output ---
  InputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-input-bucket-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  OutputBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${ProjectName}-output-bucket-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # --- ECR Repository to store the Docker image ---
  EcrRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ProjectName
      ImageScanningConfiguration:
        ScanOnPush: true
      ImageTagMutability: MUTABLE

  # --- ECS Cluster ---
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${ProjectName}-cluster"

  # --- IAM Roles for the Fargate Task ---
  # Role for the container to access other AWS services (e.g., S3)
  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-TaskRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${ProjectName}-S3AccessPolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub "arn:aws:s3:::${InputBucket}/*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${OutputBucket}/*"

  # Role for ECS agent to pull image and write logs
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-TaskExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # --- CloudWatch Log Group for container logs ---
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${ProjectName}"
      RetentionInDays: 30

  # --- ECS Task Definition: The blueprint for our container ---
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ProjectName
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      Cpu: "4096" # 4 vCPU
      Memory: "8192" # 8 GB - Marker can be memory intensive
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      ContainerDefinitions:
        - Name: !Ref ProjectName
          Image: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepository.RepositoryName}:latest"
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          # Environment variables are provided at runtime by the Step Function
          # The entrypoint.sh script expects INPUT_S3_URI and OUTPUT_S3_URI_PREFIX
          Environment: []

Outputs:
  EcrRepositoryUri:
    Description: "The URI of the ECR repository for the doc-reader image"
    Value: !GetAtt EcrRepository.RepositoryUri
  EcsClusterName:
    Description: "The name of the ECS Cluster"
    Value: !Ref EcsCluster
  TaskDefinitionArn:
    Description: "The ARN of the ECS Task Definition"
    Value: !Ref TaskDefinition
  InputBucketName:
    Description: "Name of the S3 bucket for input files"
    Value: !Ref InputBucket
  OutputBucketName:
    Description: "Name of the S3 bucket for output files"
    Value: !Ref OutputBucket
