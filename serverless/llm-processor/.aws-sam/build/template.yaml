AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Deploys Step Functions workflow with Amazon Bedrock integration for
  LLM processing. Processes markdown files with LLM instructions and returns structured
  responses.

  '
Parameters:
  ProjectName:
    Type: String
    Default: llm-processor
  FoundationalModelId:
    Type: String
    Default: anthropic.claude-3-5-haiku-20241022-v1:0
Resources:
  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${ProjectName}-StepFunctionsExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: states.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName:
          Fn::Sub: ${ProjectName}-BedrockInvokePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - bedrock:InvokeModel
            Resource:
            - Fn::Sub: arn:aws:bedrock:${AWS::Region}::foundation-model/${FoundationalModelId}
      - PolicyName:
          Fn::Sub: ${ProjectName}-S3AccessPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${InputBucket}/*
              - InputBucket:
                  Fn::ImportValue: finance-doc-core-infra-input-bucket
          - Effect: Allow
            Action:
            - s3:PutObject
            Resource:
              Fn::Sub:
              - arn:aws:s3:::${OutputBucket}/*
              - OutputBucket:
                  Fn::ImportValue: finance-doc-core-infra-output-bucket
      - PolicyName:
          Fn::Sub: ${ProjectName}-CloudWatchLogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            Resource:
              Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
  LlmProcessorStateMachine:
    Type: AWS::Serverless::StateMachine
    Description: LLM Document Processor
    Properties:
      Name:
        Fn::Sub: ${ProjectName}-StateMachine
      Role:
        Fn::GetAtt:
        - StepFunctionsExecutionRole
        - Arn
      DefinitionUri: ../../llm-processor-state-machine.yaml
  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DocReaderEventBridgeRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: StepFunctionsInvokePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - states:StartExecution
            Resource:
              Fn::GetAtt:
              - LlmProcessorStateMachine
              - Arn
  LlmStartProcessorRule:
    Type: AWS::Events::Rule
    Properties:
      Name: llm-processor-start
      Description: Triggers LLM processor when doc-reader uploads markdown files to
        S3
      EventPattern:
        source:
        - aws.s3
        detail-type:
        - Object Created
        detail:
          bucket:
            name:
            - Fn::ImportValue: finance-doc-core-infra-output-bucket
          object:
            key:
            - prefix: doc-reader-outputs/
            - suffix: .md
      State: ENABLED
      Targets:
      - Arn:
          Ref: LlmProcessorStateMachine
        Id: LlmProcessorTarget
        RoleArn:
          Fn::GetAtt:
          - EventBridgeRole
          - Arn
        InputTransformer:
          InputPathsMap:
            bucket: $.detail.bucket.name
            key: $.detail.object.key
          InputTemplate: "{\n  \"input_bucket\": \"<bucket>\",\n  \"input_key\": \"\
            <key>\",\n  \"output_bucket\": \"<bucket>\",\n  \"output_key\": \"llm-processed/<key>-processed.json\"\
            \n}\n"
Outputs:
  StateMachineArn:
    Description: The ARN of the Step Functions State Machine
    Value:
      Ref: LlmProcessorStateMachine
    Export:
      Name:
        Fn::Sub: ${ProjectName}-state-machine-arn
