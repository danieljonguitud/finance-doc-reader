AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  RDS Data API Proxy Lambda function for database operations

Parameters:
  ProjectName:
    Type: String
  ApplicationName:
    Type: String
    Default: rds-data

Resources:
  RdsDataLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${ProjectName}-${ApplicationName}"
      RetentionInDays: 14

  RdsDataExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-${ApplicationName}-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
      Policies:
        - PolicyName: RdsDataApiAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - rds-data:ExecuteStatement
                  - rds-data:BatchExecuteStatement
                Resource: !ImportValue finance-doc-core-infra-aurora-cluster-arn
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                Resource: !ImportValue finance-doc-core-infra-database-secret-arn
        - PolicyName: SourceMapEncrypt
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - kms:Encrypt
                Resource: '*'

  RdsDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${ProjectName}-${ApplicationName}"
      CodeUri: src/
      Handler: main.handler
      Runtime: nodejs22.x
      Architectures:
        - arm64
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt RdsDataExecutionRole.Arn
      Tracing: Active
      LoggingConfig:
        LogFormat: JSON
      Environment:
        Variables:
          LOG_LEVEL: INFO
          AURORA_CLUSTER_ARN: !ImportValue finance-doc-core-infra-aurora-cluster-arn
          DATABASE_SECRET_ARN: !ImportValue finance-doc-core-infra-database-secret-arn
          DATABASE_NAME: !ImportValue finance-doc-core-infra-database-name
      Tags:
        Project: !Ref ProjectName
        Service: database-proxy
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020"
        Sourcemap: true
        EntryPoints: 
          - main.ts

Outputs:
  RdsDataFunctionArn:
    Description: "ARN of the RDS Proxy Lambda function"
    Value: !GetAtt RdsDataFunction.Arn
    Export:
      Name: !Sub "${ProjectName}-${ApplicationName}-function-arn"
  
  RdsDataFunctionName:
    Description: "Name of the RDS Proxy Lambda function"
    Value: !Ref RdsDataFunction
    Export:
      Name: !Sub "${ProjectName}-${ApplicationName}-function-name"
